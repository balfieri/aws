#!/usr/bin/env python3
#
import os
import sys
import subprocess

cmd_en = True

def die( msg ):
    print( f'ERROR: {msg}' )
    sys.exit( 1 )

def cmd( c, echo=True, echo_stdout=False, can_die=True ):
    if echo: print( c )
    if cmd_en:
        info = subprocess.run( c, shell=True, text=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT )
        if echo_stdout: print( info.stdout )
        if can_die and info.returncode != 0: die( f'command failed: {c}' )
        return info.stdout
    else:
        return ''

bundle_name = "bundle"
inst_cnt    = 1
do_launch   = True
do_harvest  = True

i = 1
while i < len(sys.argv):
    arg = sys.argv[i]
    i += 1
    if   arg == '-bundle':
        bundle_name = sys.argv[i]
    elif arg == '-c': 
        inst_cnt = int(sys.argv[i])
    elif arg == '-do_launch':
        do_launch = int(sys.argv[i]) == 1
    elif arg == '-do_harvest':
        do_harvest = int(sys.argv[i]) == 1
    else:
        die( f'unknown option: {arg}' )
    i += 1

bundle_tar_path = f'{bundle_name}.tar.gz'

if do_launch:
    print( f'Removing local results files...' )
    cmd( f'rm -f results*.out results.tar.gz' )

    print( f'Copying {bundle_tar_path} to master instance...' )
    cmd( f'on_inst rm -fr ./run; mkdir ./run' )
    cmd( f'to_inst {bundle_tar_path} ./run/{bundle_tar_path}' )

    print( f'Untaring and building bundle on master instance...' )
    cmd( f'on_inst cd ./run; tar xvfz {bundle_tar_path}; ./build.sh' )

    print( f'Launching {inst_cnt} instances that are clones of the master instance...' )
    cmd( f'create_insts {inst_cnt} -remote_script ./run.sh -clone_master' )

if do_harvest:
    print( f'Harvesting results...' )
    image = cmd( 'my_image', echo=False, echo_stdout=True )
    while True:
        # get list of all instances that use image

        # for each one in the stopped state, figure out its index, copy
        # and the stdout and results.tar.gz file to this PC. Then delete the instance.

        # report how many results we have harvested based on the number of results*.out files, 
        # quit if we have them all
        #

        # otherwise sleep for 60 seconds and try again
        #
